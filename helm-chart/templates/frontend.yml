---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-frontend-service-stable
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.frontend.service.type }}
  selector:
    app: frontend
  ports:
    - port: {{ .Values.frontend.service.port }}
      targetPort: {{ .Values.frontend.containerPort }}
      protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-frontend-service-canary
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.frontend.service.type }}
  selector:
    app: frontend
  ports:
    - port: {{ .Values.frontend.service.port }}
      targetPort: {{ .Values.frontend.containerPort }}
      protocol: TCP

---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Release.Name }}-frontend-rollout
  namespace: {{ .Values.namespace }}
  labels:
    app: frontend
spec:
  replicas: {{ .Values.frontend.replicas }}
  strategy:
    canary:
      canaryService: {{ .Release.Name }}-frontend-service-canary
      stableService: {{ .Release.Name }}-frontend-service-stable
      trafficRouting:
        nginx:
          stableIngress: {{ .Release.Name }}-nginx-stable
      steps:
      - setWeight: 20
      - pause: {} # Manual intervention step
      - setWeight: 60
      - pause: { duration: 10s }
      - setWeight: 100
      - pause: { duration: 10s }
  revisionHistoryLimit: 2 # Keep the last 2 revisions
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.frontend.containerPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.frontend.containerPort }}
            initialDelaySeconds: {{ .Values.frontend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.frontend.containerPort }}
            initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
